security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders: 
        App\Entity\Admin:
            algorithm: bcrypt
        App\Entity\Client:
            algorithm: bcrypt

    providers:
        users_in_memory: { memory: null }
        admin_login: 
            entity:
                class: App\Entity\Admin
                property: username

        client_login:
            entity:
                class: App\Entity\Client
                property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/admin
            anonymous: true
            provider: admin_login

            form_login:
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin_tdb

            logout:
                path: admin_logout
                target: home
            
        client_login:
            pattern: ^/client
            anonymous: true
            provider: client_login

            form_login:
                login_path: client_login
                check_path: client_login
                default_target_path: client_tdb
            
            logout:
                path: client_logout
                target: home
            
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/client/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/client, roles: ROLE_CLIENT }